name: Docker Image Deployment

on:
  push:
    branches:
      - main

jobs:
  Build-Image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/funeral_agency:latest .
        working-directory: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/funeral_agency:latest

  Scan-With-Trivy:
    runs-on: ubuntu-latest
    needs: Build-Image

    steps:
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb

      - name: Trivy Scan
        run: trivy image ${{ secrets.DOCKERHUB_USERNAME }}/funeral_agency:latest

      - name: Check Trivy Results
        run: |
          trivy_exit_code=$?
          if [ "$trivy_exit_code" -ne 0 ]; then
            echo "Trivy found vulnerabilities. Exiting with code $trivy_exit_code."
            exit $trivy_exit_code
          else
            echo "No vulnerabilities found by Trivy."
          fi


  Scan-With-SonarCloud:
      name: Scan with SonarCloud
      runs-on: ubuntu-latest

      needs: Build-Image

      steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Scan-With-Snyk:
    name: Scan with Snyk
    runs-on: ubuntu-latest

    needs: Build-Image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Python
        run: sudo apt-get update -y && sudo apt-get install -y python3 python3-pip

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Run Snyk
        run: snyk test --file=requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
